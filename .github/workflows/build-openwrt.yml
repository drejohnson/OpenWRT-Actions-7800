#=================================================
# Description: Hnyman R7800 OpenWrt build using GitHub Actions
# Lisence: MIT
# Author: Dre Johnson dre@phreshr.com
#=================================================

name: OpenWrt R7800 Build

on:
  push:
#    branches:
#      - master
  pull_request:
    branches:
      - master

#  schedule:
#    - cron: 0 8 * * 5

env:
  BUILD_SH: build.sh
  DIY_SH: OpenWrt-R7800.sh
  SSH_ACTIONS: false
  UPLOAD_BRANCH: true
  BRANCH: R7800-Hnyman
  GITHUB_USER_NAME: drejohnson
  GITHUB_USER_EMAIL: ${{ secrets.EMAIL }}
  GITHUB: github.com/drejohnson/OpenWrt-Actions-R7800.git
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  CREATE_RELEASE: true
  BUILD_USER: drejohnson
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 1

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

#    - name: Clone source code
#      env:
#        REPO_URL: https://github.com/openwrt/openwrt
#        REPO_BRANCH: master
#      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Initialize build
      run: |
        mkdir openwrt
        chmod +x build.sh && cp build.sh ./openwrt && cd openwrt && ./build.sh
        chmod +x newBuildroot.sh && ./newBuildroot.sh

#     - name: Update & Install feeds
#       working-directory: ./openwrt
#       run: |
#         ./scripts/feeds update -a
#         ./scripts/feeds install -a
        
    - name: Load Custom Configuration
      # working-directory: ./openwrt/master
      run: |
        chmod +x $DIY_SH
        cd ./openwrt/master
        ../../$DIY_SH
        make defconfig
        
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Build firmware
      working-directory: ./openwrt/master
      id: compile
      run: |
        ./hnscripts/updateNmake.sh
        echo "::set-output name=status::success"

    - name: Clean Up
      id: cleanup
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BRANCH == 'true' && !cancelled()
      run: |
        cd ./openwrt/master/bin/targets/*/*
        rm -rf *uImage
        rm -rf *.manifest
        rm -rf *.seed
        rm -rf *.buildinfo
        
    - name: Upload Branch
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BRANCH == 'true' && !cancelled() 
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          cd ./openwrt/master/bin
          git init
          git config user.name $GITHUB_USER_NAME
          git config user.email $GITHUB_USER_EMAIL
          git add .
          git commit -m "Update OpenWrt_"$BRANCH
          git push --force --quiet https://${{ secrets.GITHUB_TOKEN }}@$GITHUB HEAD:OpenWrt-$BRANCH

    - name: Organize Files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        mv openwrt/master/.config openwrt/master/bin/targets/*/*
        cd openwrt/master/bin/targets/*/*
        rm -rf packages
        rm -rf *uImage
        rm -rf *.manifest
        rm -rf *.seed
        rm -rf *.buildinfo
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload Firmware Directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.BUILD_USER }}-${{ env.DATE }}-OpenWrt-${{ env.BRANCH }}-Firmware
        path: ${{ env.FIRMWARE }}

    - name: Generate Tag
      id: tag
      if: steps.compile.outputs.status == 'success' && env.CREATE_RELEASE == 'true' && !cancelled()
      run: |
        echo ::set-env name=RELEASE_TAG::"$(TZ=UTC-8 date +"%Y-%m-%d")"
        echo "::set-output name=status::success"
    
    - name: Upload Firmware To Release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Netgear ${{ env.BRANCH }} ðŸš€ | Automatic compilation / ${{ env.RELEASE_TAG }}
        tag_name: ${{ env.RELEASE_DATE }}
        body: |            
            1. This firmware is automatically compiled
            2. Only complete firmware is provided in the release
            3. If you need a separate IPK, please download from the branch
            4. Source Codeï¼š${{ env.REPO_URL }}
            -- Build by ${{ env.BUILD_USER }} @ with Github Action on ${{ env.RELEASE_DATE }}
            ðŸš€ Auto build           
            ${{ env.useVersionInfo }}
            ${{ github.event.commits[0].message }}
        files: ${{ env.FIRMWARE }}/*
        
    - name : Upload artifact
      #working-directory: ./openwrt
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: bin
